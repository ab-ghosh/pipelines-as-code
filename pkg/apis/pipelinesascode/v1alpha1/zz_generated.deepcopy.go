//go:build !ignore_autogenerated

// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/runtime"
)

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *ErrorDetectionSettings) DeepCopyInto(out *ErrorDetectionSettings) {
	*out = *in
	if in.Enabled != nil {
		in, out := &in.Enabled, &out.Enabled
		*out = new(bool)
		**out = **in
	}
	if in.MaxNumberOfLines != nil {
		in, out := &in.MaxNumberOfLines, &out.MaxNumberOfLines
		*out = new(int)
		**out = **in
	}
	if in.SimpleRegexps != nil {
		in, out := &in.SimpleRegexps, &out.SimpleRegexps
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new ErrorDetectionSettings.
func (in *ErrorDetectionSettings) DeepCopy() *ErrorDetectionSettings {
	if in == nil {
		return nil
	}
	out := new(ErrorDetectionSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitProvider) DeepCopyInto(out *GitProvider) {
	*out = *in
	if in.Secret != nil {
		in, out := &in.Secret, &out.Secret
		*out = new(Secret)
		**out = **in
	}
	if in.WebhookSecret != nil {
		in, out := &in.WebhookSecret, &out.WebhookSecret
		*out = new(Secret)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitProvider.
func (in *GitProvider) DeepCopy() *GitProvider {
	if in == nil {
		return nil
	}
	out := new(GitProvider)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GithubSettings) DeepCopyInto(out *GithubSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GithubSettings.
func (in *GithubSettings) DeepCopy() *GithubSettings {
	if in == nil {
		return nil
	}
	out := new(GithubSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *GitlabSettings) DeepCopyInto(out *GitlabSettings) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new GitlabSettings.
func (in *GitlabSettings) DeepCopy() *GitlabSettings {
	if in == nil {
		return nil
	}
	out := new(GitlabSettings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Incoming) DeepCopyInto(out *Incoming) {
	*out = *in
	out.Secret = in.Secret
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Targets != nil {
		in, out := &in.Targets, &out.Targets
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Incoming.
func (in *Incoming) DeepCopy() *Incoming {
	if in == nil {
		return nil
	}
	out := new(Incoming)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Params) DeepCopyInto(out *Params) {
	*out = *in
	if in.SecretRef != nil {
		in, out := &in.SecretRef, &out.SecretRef
		*out = new(Secret)
		**out = **in
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Params.
func (in *Params) DeepCopy() *Params {
	if in == nil {
		return nil
	}
	out := new(Params)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Policy) DeepCopyInto(out *Policy) {
	*out = *in
	if in.OkToTest != nil {
		in, out := &in.OkToTest, &out.OkToTest
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.PullRequest != nil {
		in, out := &in.PullRequest, &out.PullRequest
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Policy.
func (in *Policy) DeepCopy() *Policy {
	if in == nil {
		return nil
	}
	out := new(Policy)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Repository) DeepCopyInto(out *Repository) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ObjectMeta.DeepCopyInto(&out.ObjectMeta)
	in.Spec.DeepCopyInto(&out.Spec)
	if in.Status != nil {
		in, out := &in.Status, &out.Status
		*out = make([]RepositoryRunStatus, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Repository.
func (in *Repository) DeepCopy() *Repository {
	if in == nil {
		return nil
	}
	out := new(Repository)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *Repository) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryList) DeepCopyInto(out *RepositoryList) {
	*out = *in
	out.TypeMeta = in.TypeMeta
	in.ListMeta.DeepCopyInto(&out.ListMeta)
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Repository, len(*in))
		for i := range *in {
			(*in)[i].DeepCopyInto(&(*out)[i])
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryList.
func (in *RepositoryList) DeepCopy() *RepositoryList {
	if in == nil {
		return nil
	}
	out := new(RepositoryList)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyObject is an autogenerated deepcopy function, copying the receiver, creating a new runtime.Object.
func (in *RepositoryList) DeepCopyObject() runtime.Object {
	if c := in.DeepCopy(); c != nil {
		return c
	}
	return nil
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositoryRunStatus) DeepCopyInto(out *RepositoryRunStatus) {
	*out = *in
	in.Status.DeepCopyInto(&out.Status)
	if in.StartTime != nil {
		in, out := &in.StartTime, &out.StartTime
		*out = (*in).DeepCopy()
	}
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
	if in.SHA != nil {
		in, out := &in.SHA, &out.SHA
		*out = new(string)
		**out = **in
	}
	if in.SHAURL != nil {
		in, out := &in.SHAURL, &out.SHAURL
		*out = new(string)
		**out = **in
	}
	if in.Title != nil {
		in, out := &in.Title, &out.Title
		*out = new(string)
		**out = **in
	}
	if in.LogURL != nil {
		in, out := &in.LogURL, &out.LogURL
		*out = new(string)
		**out = **in
	}
	if in.TargetBranch != nil {
		in, out := &in.TargetBranch, &out.TargetBranch
		*out = new(string)
		**out = **in
	}
	if in.EventType != nil {
		in, out := &in.EventType, &out.EventType
		*out = new(string)
		**out = **in
	}
	if in.CollectedTaskInfos != nil {
		in, out := &in.CollectedTaskInfos, &out.CollectedTaskInfos
		*out = new(map[string]TaskInfos)
		if **in != nil {
			in, out := *in, *out
			*out = make(map[string]TaskInfos, len(*in))
			for key, val := range *in {
				(*out)[key] = *val.DeepCopy()
			}
		}
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositoryRunStatus.
func (in *RepositoryRunStatus) DeepCopy() *RepositoryRunStatus {
	if in == nil {
		return nil
	}
	out := new(RepositoryRunStatus)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *RepositorySpec) DeepCopyInto(out *RepositorySpec) {
	*out = *in
	if in.ConcurrencyLimit != nil {
		in, out := &in.ConcurrencyLimit, &out.ConcurrencyLimit
		*out = new(int)
		**out = **in
	}
	if in.GitProvider != nil {
		in, out := &in.GitProvider, &out.GitProvider
		*out = new(GitProvider)
		(*in).DeepCopyInto(*out)
	}
	if in.Incomings != nil {
		in, out := &in.Incomings, &out.Incomings
		*out = new([]Incoming)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Incoming, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Params != nil {
		in, out := &in.Params, &out.Params
		*out = new([]Params)
		if **in != nil {
			in, out := *in, *out
			*out = make([]Params, len(*in))
			for i := range *in {
				(*in)[i].DeepCopyInto(&(*out)[i])
			}
		}
	}
	if in.Settings != nil {
		in, out := &in.Settings, &out.Settings
		*out = new(Settings)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new RepositorySpec.
func (in *RepositorySpec) DeepCopy() *RepositorySpec {
	if in == nil {
		return nil
	}
	out := new(RepositorySpec)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Secret) DeepCopyInto(out *Secret) {
	*out = *in
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Secret.
func (in *Secret) DeepCopy() *Secret {
	if in == nil {
		return nil
	}
	out := new(Secret)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *Settings) DeepCopyInto(out *Settings) {
	*out = *in
	if in.GithubAppTokenScopeRepos != nil {
		in, out := &in.GithubAppTokenScopeRepos, &out.GithubAppTokenScopeRepos
		*out = make([]string, len(*in))
		copy(*out, *in)
	}
	if in.Policy != nil {
		in, out := &in.Policy, &out.Policy
		*out = new(Policy)
		(*in).DeepCopyInto(*out)
	}
	if in.Gitlab != nil {
		in, out := &in.Gitlab, &out.Gitlab
		*out = new(GitlabSettings)
		**out = **in
	}
	if in.Github != nil {
		in, out := &in.Github, &out.Github
		*out = new(GithubSettings)
		**out = **in
	}
	if in.ErrorDetection != nil {
		in, out := &in.ErrorDetection, &out.ErrorDetection
		*out = new(ErrorDetectionSettings)
		(*in).DeepCopyInto(*out)
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new Settings.
func (in *Settings) DeepCopy() *Settings {
	if in == nil {
		return nil
	}
	out := new(Settings)
	in.DeepCopyInto(out)
	return out
}

// DeepCopyInto is an autogenerated deepcopy function, copying the receiver, writing into out. in must be non-nil.
func (in *TaskInfos) DeepCopyInto(out *TaskInfos) {
	*out = *in
	if in.CompletionTime != nil {
		in, out := &in.CompletionTime, &out.CompletionTime
		*out = (*in).DeepCopy()
	}
}

// DeepCopy is an autogenerated deepcopy function, copying the receiver, creating a new TaskInfos.
func (in *TaskInfos) DeepCopy() *TaskInfos {
	if in == nil {
		return nil
	}
	out := new(TaskInfos)
	in.DeepCopyInto(out)
	return out
}
